version: '3.8'

services:
  localstack:
    image: localstack/localstack:latest
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - SERVICES=sns,sqs,dynamodb,apigateway,ssm,s3
      - EDGE_PORT=4566
      - DOCKER_HOST=unix:///var/run/docker.sock
      - S3_DIR=/tmp/s3-buckets
    ports:
      - '4566:4566'
    networks:
      - monitoring

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: http://localhost:4566
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    depends_on:
      - "localstack"
    networks:
      - monitoring

  # this is our kafka cluster.
  kafka-cluster:
    image: landoop/fast-data-dev:cp3.3.0
    environment:
      ADV_HOST: 127.0.0.1         # Change to 192.168.99.100 if using Docker Toolbox
      RUNTESTS: 0                 # Disable Running tests so the cluster starts faster
      FORWARDLOGS: 0              # Disable running 5 file source connectors that bring application logs into Kafka topics
      SAMPLEDATA: 0               # Do not create sea_vessel_position_reports, nyc_yellow_taxi_trip_data, reddit_posts topics with sample Avro records.
    ports:
      - 2181:2181                 # Zookeeper
      - 3030:3030                 # Landoop UI
      - 8081-8083:8081-8083       # REST Proxy, Schema Registry, Kafka Connect ports
      - 9581-9585:9581-9585       # JMX Ports
      - 9092:9092                 # Kafka Broker

#  prometheus:
#    image: prom/prometheus:v2.38.0
#    #network_mode: bridge
#    container_name: prometheus-container
#    volumes:
#      - ./prometheus/:/etc/prometheus/
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yaml'
#    ports:
#      - "9090:9090"
#    restart: always
#    networks:
#      - metrics

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    networks:
      - monitoring

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/:/var/lib/grafana
    environment:
      - "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource"
      - "GF_SECURITY_ADMIN_PASSWORD=admin"
    networks:
      - monitoring

networks:
  monitoring:
    driver: "bridge"
    name: "spring_ntw"
